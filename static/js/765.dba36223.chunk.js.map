{"version":3,"file":"static/js/765.dba36223.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","Pages/Movie/Movie.jsx","components/Header/Header.styled.js","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/serviceAPI/serviceAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\nexport const FormStyled = styled.form`\n  width: 300px;\n  vertical-align: middle;\n  white-space: nowrap;\n  position: relative;\n  margin-bottom: 128px;\n`;\n\nexport const InputStyled = styled.input`\n  width: 300px;\n  height: 50px;\n  background-color: #2b303b;\n  border: none;\n  font-size: 12pt;\n  float: left;\n  /* color: #262626; */\n  padding-left: 45px;\n  border-radius: 5px;\n  color: #fff;\n  padding-left: 16px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  position: absolute;\n  top: 0%;\n  right: 0%;\n  height: 50px;\n \n  /* background-color: #2b303b;\n  border: none;\n  font-size: 10pt;\n  float: left;\n  color: #262626;\n  padding-left: 45px;\n  border-radius: 5px;\n  color: #fff;\n  padding-left: 16px; */\n  padding-left: 24px;\n  /* font-weight: bold; */\n  font-size: 12px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  color: white;\n  background-color: silver;\n\n  &:hover {\n    background-color: grey;\n    border: none;\n    color: #fff;\n  }\n`;\n","import { FormStyled, InputStyled, ButtonStyled } from './SearchForm.styled';\nimport { IconContext } from 'react-icons';\nimport { SlMagnifier } from 'react-icons/sl';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <FormStyled onSubmit={onSubmit} autoComplete=\"off\">\n      <InputStyled\n        name=\"search\"\n        id=\"search\"\n        placeholder=\"Search...\"\n        type=\"search\"\n      />\n      <IconContext.Provider value={{ color: 'with', size:'1.25rem'}}>\n        <ButtonStyled\n          area-label=\"Search button\"\n          type=\"subbmit\"\n          variant=\"outlined\"\n          startIcon={<SlMagnifier />}\n        ></ButtonStyled>\n      </IconContext.Provider>\n    </FormStyled>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = { onSubmit: PropTypes.func.isRequired };","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container } from '../../components/Header/Header.styled';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport moviesAPI from '../../components/serviceAPI/serviceAPI';\n\nconst movieAP = new moviesAPI();\n\nconst Movie = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n    const searchQuery = event.target.elements.search.value.trim().toLowerCase();\n    setSearchParams(searchQuery !== '' ? { query: searchQuery } : {});\n    event.target.reset();\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    movieAP.searchMovie(query).then(setSearchResult);\n  }, [query]);\n\n  return (\n    <Container>\n      <h2>Find your movie</h2>\n      <SearchForm onSubmit={handlerSubmit} />\n      {searchResult.length > 0 && <MoviesList films={searchResult} path={''} />}\n    </Container>\n  );\n};\n\nexport default Movie;","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const LogoText = styled.span`\nfont-weight: bold;\nmargin-left: 8px;\n`\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\n`\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  margin-right: 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  background-color: #efe8f5;\n  font-weight: 500;\n  &:hover,\n  :focus {\n    background-color: #feb258;\n    color: white;\n  }\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const Wraper = styled.div`\n display: flex;\n align-items: center;\n `","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const ItemStyled = styled.li`\n  list-style-type: none;\n  \n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;","import { ItemStyled, LinkStyled } from './MoviesItem.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesItem = ({ title, id, path, state }) => {\n    const additionalPath = path ? `${path}` : '';\n  return (\n    <ItemStyled>\n      <LinkStyled to={`${additionalPath}${id}`} state={state}>\n        {title}\n      </LinkStyled>\n    </ItemStyled>\n  );\n};\n\nexport default MoviesItem;\n\nMoviesItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  path: PropTypes.string.isRequired,\n  state: PropTypes.object.isRequired,\n};","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n","import MoviesItem from '../MoviesItem/MoviesItem';\nimport { Container } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ films, path }) => {\n    const location = useLocation();\n\n    return (\n      <Container>\n        <ul>\n          {films.map(({ id, title }) => (\n              <MoviesItem\n                key={id}\n                id={id}\n                path={path}\n                title={title}\n                state={{ from: location }}\n              />\n          ))}\n        </ul>\n      </Container>\n    );\n}\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};","import axios from 'axios';\nimport defaultImage from '../Images/notFound.png'\n\nconst API_KEY = 'api_key=9790c9e061754f8ee983e30effe6feec';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day?';\nconst API_IMG_POSTER = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = BASE_URL;\n\nclass moviesAPI {\n    getTrendingMovies = async () => {\n        const response = await axios.get(`${TRENDING_URL}${API_KEY}`);\n        const dataTrendFilms = await response.data.results;\n        return await dataTrendFilms;\n    };\n\n    searchMovie = async query => {\n        const response = await axios.get(`search/movie?${API_KEY}&language=en-US&query=${query}`);\n        return await response.data.results;\n    };\n\n    getReviews = async movieId => {\n        const response = await axios.get(`movie/${movieId}/reviews?${API_KEY}`);\n        return await response.data.results;\n        };\n\n    getMovie = async movieId => {\n        const movie = await axios.get(`movie/${movieId}?${API_KEY}`);\n        const { genres, id, title, poster_path, vote_average, overview } = await movie.data;\n        const posterPath = (await poster_path)\n        ? `${API_IMG_POSTER + poster_path}`\n        : defaultImage;\n        return { genres, id, title, posterPath, vote_average, overview };\n    };\n\n    getActors = async movieId => {\n        const response = await axios.get(`movie/${movieId}/credits?${API_KEY}&language=en-US`);\n        const cast = await response.data.cast;\n        const actors = await cast.map(({ name, character, profile_path }) => {\n        const actorPhotoPath = profile_path\n            ? `${API_IMG_POSTER + profile_path}`\n            : defaultImage;\n            return { name, character, actorPhotoPath };\n        });\n        return await actors;\n    };\n}\n\nexport default moviesAPI;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const fetchFilms = async () => {\n//     const responce = await axios.get(\n//       `${BASE_URL}${TRENDING_URL}${API_KEY}`\n//     );\n//     return responce.data.results;\n// }\n// export default fetchFilms;\n\n\n// const apiFetch = async () => {\n//     const query = await fetchFilms();\n//     console.log('query ---->', query);\n// }\n// apiFetch()\n\n//   // колекція по пошуку за ключовим словом\n//   async fetchSearchFilms() {\n//     const responce = await axios.get(\n//       `${BASE_URL}${SEARCH}${API_KEY}&page=${this.page}&include_adult=false&query=${this.inputValue}`\n//     );\n//     // this.incrementPage();\n//     return responce.data;\n//   }\n//   async searchGanreFilms() {\n//     const responce = await axios.get(\n//       `${BASE_URL}discover/movie?${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&with_watch_monetization_types=flatrate&include_video=false&with_genres=${this.genresId}&page=${this.page}`\n//     );\n//     return responce.data;\n//   }\n\n//   // повна інформація про фільм\n//   async fetchOneFilm() {\n//     const responce = await axios.get(\n//       `${BASE_URL}movie/${this.movieId}?${API_KEY}`\n//     );\n//     return responce;\n//   }\n\n//   // трейлер до фільму\n//   async fetchTrailerFilm() {\n//     const responce = await axios.get(\n//       `${BASE_URL}movie/${this.movieId}/videos?${API_KEY}`\n//     );\n//     return responce;\n//   }\n\n//   //   повертає обєкт з масивом жанрів, масивом фильмів, total_pages, total_results\n//   async dataMovies() {\n//     const genres = await this.getGenres(); // Повертає жанри з АРІ\n//     let data = null;\n//     if (this.query) {\n//       data = await this.fetchSearchFilms();\n//     } else {\n//       data = await this.fetchTrendingFilms(); // Повертає масив фільмів з АРІ\n//     }\n//     const { results, total_pages, total_results } = data;\n//     return { genres, results, total_pages, total_results };\n//   }\n\n//   async getGenres() {\n//     const url = `${BASE_URL}${GENRES_LIST}${API_KEY}`; //\n//     const response = await axios.get(url); // Запит на АРІ за жанрами\n//     return response.data.genres; // Повертає проміс із жанрами\n//   }\n\n//   incrementPage() {\n//     this.page += 1;\n//   }\n\n//   resetPage() {\n//     this.page = 1;\n//   }\n\n//   get value() {\n//     return this.inputValue;\n//   }\n\n//   set value(newInputValue) {\n//     this.inputValue = newInputValue;\n//   }\n\n//   get currentPage() {\n//     return this.page;\n//   }\n\n//   set currentPage(newPage) {\n//     this.page = newPage;\n//   }\n\n"],"names":["FormStyled","styled","InputStyled","ButtonStyled","Button","onSubmit","autoComplete","name","id","placeholder","type","value","color","size","variant","startIcon","movieAP","moviesAPI","useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMovie","then","event","preventDefault","searchQuery","target","elements","search","trim","toLowerCase","reset","length","MoviesList","films","path","LogoText","List","Container","HeaderStyled","Link","NavLink","Wraper","LinkStyled","ItemStyled","title","state","additionalPath","to","location","useLocation","map","from","API_KEY","API_IMG_POSTER","axios","getTrendingMovies","response","data","results","dataTrendFilms","getReviews","movieId","getMovie","movie","genres","poster_path","vote_average","overview","defaultImage","posterPath","getActors","cast","character","profile_path","actorPhotoPath","actors"],"sourceRoot":""}