{"version":3,"file":"static/js/493.f3c66daa.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","Pages/Home/Home.jsx","components/Header/Header.styled.js","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/serviceAPI/serviceAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderStyle = styled.div`\n  text-align: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderStyle } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderStyle>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"64\"\n        visible={true}\n      />\n    </LoaderStyle>\n  );\n};\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { Container } from '../../components/Header/Header.styled';\nimport MoviesList from '../../components/MoviesList';\nimport moviesAPI from '../../components/serviceAPI';\nimport Loader from '../../components/Loader'\n\nconst filmsAPI = new moviesAPI();\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n    \n  useEffect(() => {\n      async function fetchTrendMovies() {\n          setIsLoading(true);\n          try {\n            setPopularMovies(await filmsAPI.getTrendingMovies());\n          } catch (error) {\n            console.log(error)\n          } finally {\n              setIsLoading(false);\n          }\n    }\n    fetchTrendMovies();\n  }, []);\n\n  return (\n    <Container>\n      <h2>Tranding today</h2>\n      {isLoading && <Loader />}\n      <MoviesList films={popularMovies} path={'movies/'} />\n    </Container>\n  );\n};\n\nexport default Home;","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const LogoText = styled.span`\nfont-weight: bold;\nmargin-left: 8px;\n`\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\n`\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  margin-right: 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  background-color: #efe8f5;\n  font-weight: 500;\n  &:hover,\n  :focus {\n    background-color: #feb258;\n    color: white;\n  }\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const Wraper = styled.div`\n display: flex;\n align-items: center;\n `","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const ItemStyled = styled.li`\n  list-style-type: none;\n  \n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;","import { ItemStyled, LinkStyled } from './MoviesItem.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesItem = ({ title, id, path }) => {\n    const location = useLocation();\n    const additionalPath = path ? `${path}` : '';\n  return (\n    <ItemStyled>\n      <LinkStyled to={`${additionalPath}${id}`} state={location.state}>\n        {title}\n      </LinkStyled>\n    </ItemStyled>\n  );\n};\n\nexport default MoviesItem;\n\nMoviesItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  path: PropTypes.string.isRequired\n};","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n","import MoviesItem from '../MoviesItem/MoviesItem';\nimport { Container } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ films, path }) => {\n    const location = useLocation();\n\n    return (\n      <Container>\n        <ul>\n          {films.map(({ id, title }) => (\n              <MoviesItem\n                key={id}\n                id={id}\n                path={path}\n                title={title}\n                state={{ from: location }}\n              />\n          ))}\n        </ul>\n      </Container>\n    );\n}\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};","import axios from 'axios';\nimport defaultImage from '../Images/notFound.png'\n\nconst API_KEY = 'api_key=9790c9e061754f8ee983e30effe6feec';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day?';\nconst API_IMG_POSTER = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = BASE_URL;\n\nclass moviesAPI {\n    getTrendingMovies = async () => {\n        const response = await axios.get(`${TRENDING_URL}${API_KEY}`);\n        const dataTrendFilms = await response.data.results;\n        return await dataTrendFilms;\n    };\n\n    searchMovie = async query => {\n        const response = await axios.get(`search/movie?${API_KEY}&language=en-US&query=${query}`);\n        return await response.data.results;\n    };\n\n    getReviews = async movieId => {\n        const response = await axios.get(`movie/${movieId}/reviews?${API_KEY}`);\n        return await response.data.results;\n        };\n\n    getMovie = async movieId => {\n        const movie = await axios.get(`movie/${movieId}?${API_KEY}`);\n        const { genres, id, title, poster_path, vote_average, overview } = await movie.data;\n        const posterPath = (await poster_path)\n        ? `${API_IMG_POSTER + poster_path}`\n        : defaultImage;\n        return { genres, id, title, posterPath, vote_average, overview };\n    };\n\n    getActors = async movieId => {\n        const response = await axios.get(`movie/${movieId}/credits?${API_KEY}&language=en-US`);\n        const cast = await response.data.cast;\n        const actors = await cast.map(({ name, character, profile_path }) => {\n        const actorPhotoPath = profile_path\n            ? `${API_IMG_POSTER + profile_path}`\n            : defaultImage;\n            return { name, character, actorPhotoPath };\n        });\n        return await actors;\n    };\n}\n\nexport default moviesAPI;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const fetchFilms = async () => {\n//     const responce = await axios.get(\n//       `${BASE_URL}${TRENDING_URL}${API_KEY}`\n//     );\n//     return responce.data.results;\n// }\n// export default fetchFilms;\n\n\n// const apiFetch = async () => {\n//     const query = await fetchFilms();\n//     console.log('query ---->', query);\n// }\n// apiFetch()\n\n//   // колекція по пошуку за ключовим словом\n//   async fetchSearchFilms() {\n//     const responce = await axios.get(\n//       `${BASE_URL}${SEARCH}${API_KEY}&page=${this.page}&include_adult=false&query=${this.inputValue}`\n//     );\n//     // this.incrementPage();\n//     return responce.data;\n//   }\n//   async searchGanreFilms() {\n//     const responce = await axios.get(\n//       `${BASE_URL}discover/movie?${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&with_watch_monetization_types=flatrate&include_video=false&with_genres=${this.genresId}&page=${this.page}`\n//     );\n//     return responce.data;\n//   }\n\n//   // повна інформація про фільм\n//   async fetchOneFilm() {\n//     const responce = await axios.get(\n//       `${BASE_URL}movie/${this.movieId}?${API_KEY}`\n//     );\n//     return responce;\n//   }\n\n//   // трейлер до фільму\n//   async fetchTrailerFilm() {\n//     const responce = await axios.get(\n//       `${BASE_URL}movie/${this.movieId}/videos?${API_KEY}`\n//     );\n//     return responce;\n//   }\n\n//   //   повертає обєкт з масивом жанрів, масивом фильмів, total_pages, total_results\n//   async dataMovies() {\n//     const genres = await this.getGenres(); // Повертає жанри з АРІ\n//     let data = null;\n//     if (this.query) {\n//       data = await this.fetchSearchFilms();\n//     } else {\n//       data = await this.fetchTrendingFilms(); // Повертає масив фільмів з АРІ\n//     }\n//     const { results, total_pages, total_results } = data;\n//     return { genres, results, total_pages, total_results };\n//   }\n\n//   async getGenres() {\n//     const url = `${BASE_URL}${GENRES_LIST}${API_KEY}`; //\n//     const response = await axios.get(url); // Запит на АРІ за жанрами\n//     return response.data.genres; // Повертає проміс із жанрами\n//   }\n\n//   incrementPage() {\n//     this.page += 1;\n//   }\n\n//   resetPage() {\n//     this.page = 1;\n//   }\n\n//   get value() {\n//     return this.inputValue;\n//   }\n\n//   set value(newInputValue) {\n//     this.inputValue = newInputValue;\n//   }\n\n//   get currentPage() {\n//     return this.page;\n//   }\n\n//   set currentPage(newPage) {\n//     this.page = newPage;\n//   }\n\n"],"names":["LoaderStyle","styled","strokeColor","strokeWidth","animationDuration","width","visible","filmsAPI","moviesAPI","useState","popularMovies","setPopularMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","console","log","fetchTrendMovies","MoviesList","films","path","LogoText","List","Container","HeaderStyled","Link","NavLink","Wraper","LinkStyled","ItemStyled","title","id","location","useLocation","additionalPath","to","state","map","from","API_KEY","API_IMG_POSTER","axios","response","data","results","dataTrendFilms","searchMovie","query","getReviews","movieId","getMovie","movie","genres","poster_path","vote_average","overview","defaultImage","posterPath","getActors","cast","name","character","profile_path","actorPhotoPath","actors"],"sourceRoot":""}